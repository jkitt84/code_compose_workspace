/*
 * press button BUT1 (P1.3) to light up LED1 (P1.0)
 * responds to an interupt on the input pin. LPM_4 otherwise.
 * listing 7.1 page 217
 */
//------------------------------------------------------------
#include <msp430g2452.h>
#include <intrinsics.h>
//------------------------------------------------------------
#define LED1 BIT0//led1 which is P1.0
#define BUT1 BIT4//button 1 which is p1.3
//------------------------------------------------------------
void main(void)
{
	WDTCTL = WDTPW | WDTHOLD;
	P1OUT = 0x00;//pre-load everything off
	P2DIR = LED1;//set LED1 as an output
	P1IE = BUT1;//enable interupts on Button 1 (p1.3)
	P1IES = BUT1;//interupt edge select "1" --> sensitive of negative edge (H->L)
	do {
		P1IFG = 0;//clear any pending interupts "Port 2 Interupt Flag"
	} while (P1IFG !=0);
	for ( ; ; ){
		__low_power_mode_4();
	}
}
//-------------------------------------------------------------
/*Interupt service routine for port 1 inputs
 * Only one bit is active so no need to check which
 * toggle LED, toggle edge sensitivity, clear and pending interupts
 * device returns to low power mode automatically after Interupt Service Routine
 */
#pragma vector = PORT1_VECTOR//this is likely going to cause a problem
__interrupt void PORT1_ISR (void)
{
	P1OUT ^= LED1;//toggle the LED1 output
	P1IES ^= BUT1;//toggle edge sensitivity of Button1
	do {
		P1IFG = 0;			//clear any pending interupts
	} while (P1IFG != 0);	//until none remain
}
